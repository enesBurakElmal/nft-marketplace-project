{"version":3,"sources":["AppElements.js","components/login-auth/web3-type-login.jsx","assets/metamask.svg","components/login-auth/firebase-type-login.jsx","components/card-list/card-list.js","assets/card-profile.png","assets/ava-token.png","components/card-paginant/card-paginant.jsx","components/card-content/card-content.jsx","components/card-list/card-list.component.jsx","assets/navbar-logo.png","components/navbar/navbar-component.jsx","App.js","index.js"],"names":["AppContainer","styled","div","p","button","MetaMaskAuth","as_","SECTIONS_DATA","title","id","title0","title1","title2","title3","imageUrl","Card","require","useState","currentPage","setCurrentPage","employees","page","setPage","totalPages","Math","ceil","length","employeesPerPage","numberOfEmployeesVistited","displayEmployees","slice","map","employee","className","style","fontSize","color","src","alt","width","height","UserPhoto","AvaxCoinImg","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","handlePageClick","data","selectedPage","selected","offset","pageRangeDisplayed","subContainerClassName","onPageChange","activeClassName","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","CardContent","fontWeight","href","Dropdown","Toggle","variant","Menu","Item","CardListComponent","itemsPerPage","CONTRACT_ADDRESS","NavbarComponent","currentAccount","setCurrentAccount","checkIfWalletIsConnected","a","window","ethereum","console","log","request","method","accounts","account","setupEventListener","connectWallet","alert","chainId","provider","ethers","providers","Web3Provider","signer","getSigner","Contract","myEpicNft","abi","on","from","tokenId","toNumber","error","useEffect","Navbar","bg","expand","Brand","class","NavbarLogo","Container","Collapse","Nav","Link","NavDropdown","Divider","onClick","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.64a76376.chunk.js","sourcesContent":["  import styled from 'styled-components'\n\nexport const AppContainer = styled.div`\n  width: 100%;\n  max-width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  // margin-top: 10rem;\n  background-color: white;\n`\n\nexport const DivList = styled.div`\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  padding-bottom: 20px;\n  padding-top: 20px;\n`\nexport const DivListLeft = styled.div`\n  margin-right: 20px;\n`\n\nexport const DivListRight = styled.div`\n  margin-left: 20px;\n`\n\nexport const DivListItem = styled.div`\n  margin-top: auto;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  border: 10px solid;\n  color: #3b3b3b;\n  border-color: #3b3b3b;\n  font-weight: bold;\n  :hover {\n    background-color: rgb(80, 94, 200);\n    color: rgb(255, 255, 255);\n    border-color: rgb(44, 42, 39);\n  }\n`\n\nexport const Paragraph = styled.p`\n  font-family: 'Roboto', sans-serif;\n  font-size: 1.5rem;\n  font-weight: bold;\n`\n\nexport const ButtonList = styled.div`\n  margin-bottom: 10px;\n`\nexport const Button = styled.button`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-left: 10px;\n  margin-right: 10px;\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid #3b3b3b;\n  background-color: #3b3b3b;\n  color: #ffffff;\n  font-weight: bold;\n  :hover {\n    background-color: rgb(27, 27, 28) !important;\n    color: rgb(255, 255, 255);\n  }\n`\n","import { useState, useEffect } from 'react'\nimport Web3 from 'web3'\n\nimport { ContractABI } from './erc20-data'\n\nimport '../card-buttons/card-buttons.styles.css'\n\nfunction MetaMaskAuth() {\n  const [isConnected, setIsConnected] = useState(false)\n  const [userInfo, setUserInfo] = useState({})\n  const [query, setQuery] = useState('')\n  const [click, setClick] = useState(false)\n\n  useEffect(() => {\n    function checkConnectedWallet() {\n      const userData = JSON.parse(localStorage.getItem('userAccount'))\n      if (userData != null) {\n        setUserInfo(userData)\n        setIsConnected(true)\n      }\n    }\n    checkConnectedWallet()\n  }, [])\n\n  const detectCurrentProvider = () => {\n    let provider\n    if (window.ethereum) {\n      provider = window.ethereum\n    } else if (window.web3) {\n      // eslint-disable-next-line\n      provider = window.web3.currentProvider\n    } else {\n      console.log(\n        'Non-Ethereum browser detected. You should consider trying MetaMask!'\n      )\n    }\n    return provider\n  }\n\n  const onConnect = async () => {\n    try {\n      const currentProvider = detectCurrentProvider()\n      if (currentProvider) {\n        if (currentProvider !== window.ethereum) {\n          console.log(\n            'Non-Ethereum browser detected. You should consider trying MetaMask!'\n          )\n        }\n        await currentProvider.request({ method: 'eth_requestAccounts' })\n        const web3 = new Web3(currentProvider)\n        const userAccount = await web3.eth.getAccounts()\n        const chainId = await web3.eth.getChainId()\n        const address = userAccount[0]\n\n        let ethBalance = await web3.eth.getBalance(address)\n        ethBalance = web3.utils.fromWei(ethBalance, 'ether')\n\n        const contractAddress = '0xdf7008BF604887c401f01c584EFDD2e8A903F3Bc'\n        const daiToken = new web3.eth.Contract(\n          ContractABI, // ABI\n          contractAddress\n        )\n\n        daiToken.methods\n          .RandomNumber(contractAddress)\n          .call()\n          .then(function (result) {\n            console.log('randNumber: ', result)\n          })\n          .catch(function (err) {\n            console.log(err, 'err')\n          })\n\n        daiToken.methods\n          .User_s_NFTs(address)\n          .call()\n          .then(function (result) {\n            console.log(\"myNft's: \", result)\n          })\n          .catch(function (err) {\n            console.log(err, 'err')\n          })\n\n        daiToken.methods\n          .totalSupply()\n          .call()\n          .then(function (result) {\n            console.log('totalSupply: ', result)\n          })\n          .catch(function (err) {\n            console.log(err, 'err')\n          })\n\n        saveUserInfo(ethBalance, address, chainId)\n        if (userAccount.length === 0) {\n          console.log('Please connect to meta mask')\n        }\n      }\n    } catch (err) {\n      console.log(\n        'There was an error fetching your accounts. Make sure your Ethereum client is configured correctly.'\n      )\n    }\n  }\n\n  const onDisconnect = () => {\n    window.localStorage.removeItem('userAccount')\n    setUserInfo({})\n    setIsConnected(false)\n  }\n\n  const saveUserInfo = (ethBalance, account, chainId, ethKeccak256) => {\n    const userAccount = {\n      account: account,\n      balance: ethBalance,\n      connectionid: chainId,\n      keccak256: ethKeccak256,\n    }\n\n    window.localStorage.setItem('userAccount', JSON.stringify(userAccount)) //user persisted data\n    const userData = JSON.parse(localStorage.getItem('userAccount'))\n    setUserInfo(userData)\n    setIsConnected(true)\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-wrapper\">\n        {!isConnected && (\n          <div>\n            <button className=\"card-button-meta\" onClick={onConnect}>\n              Login with MetaMask\n            </button>\n          </div>\n        )}\n      </div>\n      {isConnected && (\n        <div className=\"app-wrapper\">\n          <div className=\"app-details\">\n            <h2>✅ You are connected to MetaMask</h2>\n            <div className=\"app-account\">\n              <span>Account number:</span>\n              {userInfo.account}\n            </div>\n            <div className=\"app-balance\">\n              <span>Balance:</span>\n              {userInfo.balance}\n            </div>\n            <div className=\"app-connectionid\">\n              <span>Connection ID:</span>\n              {userInfo.connectionid}\n            </div>\n          </div>\n\n          <div>\n            <button className=\"card-button-meta\" onClick={onDisconnect}>\n              Disconnect\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default MetaMaskAuth\n","export default __webpack_public_path__ + \"static/media/metamask.45038d58.svg\";","import { initializeApp } from 'firebase/app'\nimport {\n  getFirestore,\n  collection,\n  addDoc,\n  doc,\n  setDoc,\n  updateDoc,\n  arrayUnion,\n} from 'firebase/firestore'\nimport detectEthereumProvider from '@metamask/detect-provider'\n\nasync function as_() {\n  if (!window.ethereum)\n    window.open(\n      'https://metamask.app.link/dapp/friedphysicist.github.io/WebGL_Holder/'\n    )\n\n  const _provider = await detectEthereumProvider()\n  {\n    const acc = await _provider.request({ method: 'eth_requestAccounts' })\n\n    let str_acc = String(acc)\n    console.log(acc)\n\n    const firebaseApp = initializeApp({\n      apiKey: 'AIzaSyC3xIewA0y4WGFVtWcIzxkQ67ONeknibhE',\n      authDomain: 'roboclash-webwhitelist.firebaseapp.com',\n      projectId: 'roboclash-webwhitelist',\n    })\n\n    const db = getFirestore()\n    const _ref = doc(db, 'WhiteListMembers', 'Wallets')\n\n    const list_ = await updateDoc(_ref, { WalletID: arrayUnion(str_acc) })\n\n    console.log('Document written with ID: ', list_)\n    alert('You have succesfully joined to --- WhiteList with ' + acc)\n  }\n}\n\nexport default as_\n","const SECTIONS_DATA = [\n  {\n    title: 'Card 0',\n    // imageUrl: `https://duskbreakers.gg/breaker_images/${id}.png`,\n    id: 0,\n    title0: 'Span 0',\n    title1: 'Collection 0',\n    title2: '12.3 AVAX',\n    title3: '($10.15)',\n  },\n  {\n    title: 'Card 1',\n    imageUrl: 'https://via.placeholder.com/180',\n    id: 1,\n    title0: 'Span 0',\n    title1: `xStartUp Epic NFT's Series Collection`,\n    title2: '12.3 AVAX',\n    title3: '($10.15)',\n  },\n  {\n    title: 'Card 2',\n    imageUrl: 'https://via.placeholder.com/180',\n    id: 2,\n    title0: 'Span 0',\n    title1: 'Collection 2',\n    title2: '12.3 AVAX',\n    title3: '($10.15)',\n  },\n  {\n    title: 'Card 3',\n    imageUrl: 'https://via.placeholder.com/180',\n    id: 3,\n    title0: 'Span 0',\n    title1: 'Collection 3',\n    title2: '12.3 AVAX',\n    title3: '($10.15)',\n  },\n  {\n    title: 'Card 4',\n    imageUrl: 'https://via.placeholder.com/180',\n    id: 4,\n    title0: 'Span 0',\n    title1: 'Collection 4',\n    title2: '12.3 AVAX',\n    title3: '($10.15)',\n  },\n  {\n    title: 'Card 5',\n    imageUrl: 'https://via.placeholder.com/180',\n    id: 5,\n    title0: 'Span 0',\n    title1: 'Collection 5',\n    title2: '12.3 AVAX',\n    title3: '($10.15)',\n  },\n  {\n    title: 'Card 6',\n    imageUrl: 'https://via.placeholder.com/180',\n    id: 6,\n    title0: 'Span 0',\n    title1: 'Collection 6',\n    title2: '12.3 AVAX',\n    title3: '($10.15)',\n  },\n  {\n    title: 'Card 7',\n    imageUrl: 'https://via.placeholder.com/180',\n    id: 7,\n    title0: 'Span 0',\n    title1: 'Collection 7',\n    title2: 'Span 2',\n    title3: 'Span 3',\n  },\n  {\n    title: 'Card 8',\n    imageUrl: 'https://via.placeholder.com/180',\n    id: 8,\n    title0: 'Span 0',\n    title1: 'Collection 8',\n    title2: 'Span 2',\n    title3: 'Span 3',\n  },\n\n  {\n    title: 'Card 9',\n    imageUrl: 'https://via.placeholder.com/180',\n    id: 9,\n    title0: 'Span 0',\n    title1: 'Collection 9',\n    title2: 'Span 2',\n    title3: 'Span 3',\n  },\n  {\n    title: 'Card 10',\n    imageUrl: 'https://via.placeholder.com/180',\n    id: 10,\n    title0: 'Span 0',\n    title1: 'Collection 10',\n    title2: 'Span 2',\n    title3: 'Span 3',\n  },\n  {\n    title: 'Card 11',\n    imageUrl: 'https://via.placeholder.com/180',\n    id: 11,\n    title0: 'Span 0',\n    title1: 'Collection 11',\n    title2: 'Span 2',\n    title3: 'Span 3',\n  },\n  {\n    title: 'Card 12',\n    imageUrl: 'https://via.placeholder.com/180',\n    id: 12,\n    title0: 'Span 0',\n    title1: 'Collection 12',\n    title2: 'Span 2',\n    title3: 'Span 3',\n  },\n]\n\nexport default SECTIONS_DATA\n","export default __webpack_public_path__ + \"static/media/card-profile.3975f532.png\";","export default __webpack_public_path__ + \"static/media/ava-token.73b3f250.png\";","import { useState } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport React from 'react'\nimport { Buffer } from 'buffer'\n\nimport Tilt from 'react-tilt'\nimport MetaMaskAuth from '../login-auth/web3-type-login.jsx'\nimport as_ from '../login-auth/firebase-type-login'\n\nimport metaMaskAuth2 from '../login-auth/ethers-type-login'\n\nimport MetamaskLogo from '../../assets/metamask.svg'\n// import ERC20TransferABI from '../login-component/erc20-data.js'\nimport { ethers } from 'ethers'\n\nimport { daiToken } from '../login-auth/erc20-data.js'\n\nimport SECTIONS_DATA from '../card-list/card-list'\nimport UserPhoto from '../../assets/card-profile.png'\nimport AvaxCoinImg from '../../assets/ava-token.png'\nimport { addCard, removeCard } from '../card-list/scripts'\n\n// import MetaMaskAuth from '../login-component/login'\n\nimport './card-paginant.styles.css'\nimport '../card-list/card-list.styles.css'\n\nconst Web3 = require('web3')\nconst ethEnabled = async () => {\n  if (window.ethereum) {\n    await window.ethereum.request({ method: 'eth_requestAccounts' })\n    window.web3 = new Web3(window.ethereum)\n    return true\n  }\n  return false\n}\n\n// hr@gamesunited.co\n// source: https://ordinarycoders.com/blog/article/react-pagination\n// read! : https://www.freecodecamp.org/news/how-to-use-localstorage-with-react-hooks-to-set-and-get-items/\n\nconst Card = () => {\n  const [currentPage, setCurrentPage] = useState(0)\n  const [employees] = useState(SECTIONS_DATA)\n  const [page, setPage] = useState(0)\n\n  const handlePageClick = (data) => {\n    const selectedPage = data.selected\n    const offset = selectedPage * employeesPerPage\n    setCurrentPage(selectedPage)\n    setPage(offset)\n  }\n\n  const changePage = ({ selected }) => {\n    setPage(selected)\n    setCurrentPage(selected)\n  }\n\n  const handleAddCard = () => {\n    addCard()\n    setCurrentPage(currentPage + 1)\n  }\n\n  const handleRemoveCard = () => {\n    removeCard()\n    setCurrentPage(currentPage - 1)\n    // if (employees.length === 12) {\n    //   setPage(0)\n    // }\n  }\n\n  const totalPages = Math.ceil(employees.length / 12)\n  const employeesPerPage = 12\n\n  const numberOfEmployeesVistited = page * employeesPerPage\n\n  const displayEmployees = employees\n    .slice(\n      numberOfEmployeesVistited,\n      numberOfEmployeesVistited + employeesPerPage\n    )\n    .map((employee) => {\n      return (\n        <div className=\"card-container\" key={employee.id}>\n          <div className=\"card-list\">\n            <h1\n              className=\"header\"\n              style={{ fontSize: '25px', color: 'gray' }}\n            >{`Card ${employee.id} `}</h1>\n            <img\n              className=\"card-image\"\n              src={`https://duskbreakers.gg/breaker_images/${employee.id}.png`}\n              alt={`Card ${employee.id} asset`}\n              style={{ width: '218px', height: '240px' }}\n            />\n            <div className=\"card-text\">\n              <div className=\"card-text-creator-div\">\n                <p className=\"card-text-creator\">Creator: </p>\n                <img\n                  src={UserPhoto}\n                  style={{ width: '40px', height: '30px' }}\n                  alt=\"user-asset\"\n                  className=\"user-asset\"\n                />\n                <p className=\"card-text-creator\"> {employee.title0}</p>\n              </div>\n\n              <p className=\"card-text-collection\">{employee.title1}</p>\n\n              <p className=\"card-text-coin\">\n                {employee.title2}{' '}\n                <img\n                  src={AvaxCoinImg}\n                  style={{ width: '20px', height: '20px' }}\n                  alt=\"avax-coin\"\n                />\n              </p>\n              <p className=\"card-text-usd\">{employee.title3} </p>\n            </div>\n          </div>\n          <div className=\"card-button-div\">\n            <button className=\"card-buy-button\">Buy Now</button>\n          </div>\n        </div>\n      )\n    })\n\n  return (\n    <div className=\"grid-container\">\n      <div className=\"card-grid\">{displayEmployees} </div>\n      <ReactPaginate\n        previousLabel={'Previous'}\n        nextLabel={'Next'}\n        breakLabel={'...'}\n        pageCount={totalPages}\n        marginPagesDisplayed={2}\n        handlePageClick={handlePageClick}\n        pageRangeDisplayed={5}\n        subContainerClassName={'pages pagination'}\n        onPageChange={changePage}\n        activeClassName={'navigationActive'}\n        containerClassName={'navigationButtons'}\n        previousLinkClassName={'previousButton'}\n        nextLinkClassName={'nextButton'}\n        disabledClassName={'navigationDisabled'}\n        currentPage={currentPage}\n      />\n      {/* <div className=\"card-buttons\">\n        <button className=\"card-button\" onClick={handleAddCard}>\n          Add Card\n        </button>\n\n        <button className=\"card-button\" onClick={handleRemoveCard}>\n          Delete Card\n        </button>\n        <div>\n          <button className=\"card-button\"> Debugger</button>\n        </div>\n      </div> */}\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\r\n\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nimport './card-content.styles.css'\r\n\r\nconst CardContent = () => {\r\n  return (\r\n    <div className=\"card-content\">\r\n      <div className=\"null-content\">\r\n        {' '}\r\n        &#9827; Null content for UI/UX{' '}\r\n        <span style={{ fontWeight: 'bold' }}> https://randomsitename.io</span>\r\n      </div>\r\n      <ul className=\"card-list-ul\">\r\n        <li className=\"card-list-li\">\r\n          {' '}\r\n          <a href=\"#\" className=\"card-link\">\r\n            {' '}\r\n            NFT Sales{' '}\r\n          </a>\r\n        </li>\r\n        <li className=\"card-list-li\">\r\n          {' '}\r\n          <a href=\"#\" className=\"card-link\">\r\n            {' '}\r\n            Explorer{' '}\r\n          </a>\r\n        </li>\r\n        <li className=\"card-list-li\">\r\n          {' '}\r\n          <a href=\"#\" className=\"card-link\">\r\n            {' '}\r\n            NFT Stake{' '}\r\n          </a>\r\n        </li>\r\n        <li className=\"card-list-li\">\r\n          {' '}\r\n          <a href=\"#\" className=\"card-link\">\r\n            {' '}\r\n            Profile{' '}\r\n          </a>\r\n        </li>\r\n        <li className=\"card-list-li\">\r\n          {' '}\r\n          <a href=\"#\" className=\"card-link\">\r\n            {' '}\r\n            Activities{' '}\r\n          </a>\r\n        </li>\r\n        <li className=\"card-list-li\">\r\n          {' '}\r\n          <a href=\"#\" className=\"card-link\">\r\n            {' '}\r\n            Create NFT{' '}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"card-categorys\">\r\n        <div className=\"card-category-div\"> All </div>\r\n        <div className=\"card-category-div\"> Art </div>\r\n        <div className=\"card-category-div\"> Games </div>\r\n        <div className=\"card-category-div\"> Photography </div>\r\n        <div className=\"card-category-div\"> Memes </div>\r\n        <div className=\"card-category-div\"> NSFW </div>\r\n      </div>\r\n      <div className=\"card-dropdowns\">\r\n        <div className=\"card-dropdowns-left\">\r\n          <Dropdown className=\"card-category-dropdown\">\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n              All Collections\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n              <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n              <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n\r\n          <Dropdown className=\"card-category-dropdown\">\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n              All Currencies\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n              <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n              <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n        <div className=\"card-dropdowns-right\">\r\n          <Dropdown className=\"card-category-dropdown\">\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n              Newest\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n              <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n              <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n\r\n          <Dropdown className=\"card-category-dropdown\">\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n              20\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n              <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n              <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardContent\r\n","import React, { useState } from 'react'\n\nimport './card-list.styles.css'\n\nimport Card from '../card-paginant/card-paginant'\n\nimport CardContent from '../card-content/card-content'\n\nexport const CardListComponent = (itemsPerPage) => {\n  return (\n    <div className=\"card-body\">\n      <CardContent />\n      <Card />\n    </div>\n  )\n}\n\nexport default CardListComponent\n","export default __webpack_public_path__ + \"static/media/navbar-logo.ef6345d1.png\";","import { ethers } from 'ethers'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport NavbarLogo from '../../assets/navbar-logo.png'\r\n\r\nimport './navbar-styles.css'\r\n\r\nimport { Navbar, Container, Nav, NavDropdown, Button } from 'react-bootstrap'\r\n\r\nimport myEpicNft from '../login-auth/myepicnft.json'\r\n\r\nconst TOTAL_MINT_COUNT = 50\r\n\r\n// I moved the contract address to the top for easy access.\r\nconst CONTRACT_ADDRESS = '0x76768E14f9D04251915724bd06c0628654D08dcc'\r\n\r\n// source__ https://www.freecodecamp.org/news/add-a-metamask-login-to-your-laravel-app/\r\n// source2__ https://betterprogramming.pub/build-a-react-component-for-metamask-auth-10b7ecba5c3f\r\n// php dosya sorulacak\r\n\r\nconst NavbarComponent = () => {\r\n  const [currentAccount, setCurrentAccount] = useState('')\r\n\r\n  const checkIfWalletIsConnected = async () => {\r\n    const { ethereum } = window\r\n\r\n    if (!ethereum) {\r\n      console.log('Make sure you have metamask!')\r\n      return\r\n    } else {\r\n      console.log('We have the ethereum object', ethereum)\r\n    }\r\n\r\n    const accounts = await ethereum.request({ method: 'eth_accounts' })\r\n\r\n    if (accounts.length !== 0) {\r\n      const account = accounts[0]\r\n      console.log('Found an authorized account:', account)\r\n      setCurrentAccount(account)\r\n\r\n      // Setup listener! This is for the case where a user comes to our site\r\n      // and ALREADY had their wallet connected + authorized.\r\n      setupEventListener()\r\n    } else {\r\n      console.log('No authorized account found')\r\n    }\r\n  }\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const { ethereum } = window\r\n\r\n      if (!ethereum) {\r\n        alert('Get MetaMask!')\r\n        return\r\n      }\r\n\r\n      const accounts = await ethereum.request({ method: 'eth_requestAccounts' })\r\n      let chainId = await ethereum.request({ method: 'eth_chainId' })\r\n      console.log('Connected to chain ' + chainId)\r\n\r\n      // String, hex code of the chainId of the Rinkebey test network\r\n      const rinkebyChainId = '0x4'\r\n      if (chainId !== rinkebyChainId) {\r\n        alert('You are not connected to the Rinkeby Test Network!')\r\n      }\r\n      console.log('Connected', accounts[0])\r\n      setCurrentAccount(accounts[0])\r\n\r\n      // Setup listener! This is for the case where a user comes to our site\r\n      // and connected their wallet for the first time.\r\n      setupEventListener()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  // Setup our listener.\r\n  const setupEventListener = async () => {\r\n    // Most of this looks the same as our function askContractToMintNft\r\n    try {\r\n      const { ethereum } = window\r\n\r\n      if (ethereum) {\r\n        // Same stuff again\r\n        const provider = new ethers.providers.Web3Provider(ethereum)\r\n        const signer = provider.getSigner()\r\n        const connectedContract = new ethers.Contract(\r\n          CONTRACT_ADDRESS,\r\n          myEpicNft.abi,\r\n          signer\r\n        )\r\n\r\n        // THIS IS THE MAGIC SAUCE.\r\n        // This will essentially \"capture\" our event when our contract throws it.\r\n        // If you're familiar with webhooks, it's very similar to that!\r\n        connectedContract.on('NewEpicNFTMinted', (from, tokenId) => {\r\n          console.log(from, tokenId.toNumber())\r\n          alert(\r\n            `Hey there! We've minted your NFT and sent it to your wallet. It may be blank right now. It can take a max of 10 min to show up on OpenSea. Here's the link: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`\r\n          )\r\n        })\r\n\r\n        console.log('Setup event listener!')\r\n      } else {\r\n        console.log(\"Ethereum object doesn't exist!\")\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const askContractToMintNft = async () => {\r\n    try {\r\n      const { ethereum } = window\r\n\r\n      if (ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(ethereum)\r\n        const signer = provider.getSigner()\r\n        const connectedContract = new ethers.Contract(\r\n          CONTRACT_ADDRESS,\r\n          myEpicNft.abi,\r\n          signer\r\n        )\r\n\r\n        console.log('Going to pop wallet now to pay gas...')\r\n        let nftTxn = await connectedContract.makeAnEpicNFT()\r\n\r\n        console.log('Mining...please wait.')\r\n        await nftTxn.wait()\r\n        console.log(nftTxn)\r\n        if (nftTxn.wait) {\r\n          return (\r\n            <div>\r\n              <p>Minting NFT...</p>\r\n              <p>Please wait...</p>\r\n              <p>\r\n                Mined, see transaction: https://rinkeby.etherscan.io/tx/\r\n                {nftTxn.hash}\r\n              </p>\r\n            </div>\r\n          )\r\n        }\r\n        console.log(\r\n          `Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`\r\n        )\r\n      } else {\r\n        console.log(\"Ethereum object doesn't exist!\")\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkIfWalletIsConnected()\r\n  }, [])\r\n\r\n  const renderNotConnectedContainer = () => (\r\n    <button\r\n      onClick={connectWallet}\r\n      className=\"cta-button connect-wallet-button\"\r\n    >\r\n      Connect to a Wallet\r\n    </button>\r\n  )\r\n\r\n  const renderMintUI = () => (\r\n    <button\r\n      // onClick={askContractToMintNft}\r\n      className=\"cta-button connect-wallet-button\"\r\n    >\r\n      My Wallet (Not Ready)\r\n    </button>\r\n  )\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand class=\"navbar-brand\" href=\"#\">\r\n          <img\r\n            src={NavbarLogo}\r\n            alt=\"logo\"\r\n            style={{ width: '60px', height: '45px' }}\r\n            className=\"navbar-logo\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Container className=\"container-navbar\">\r\n          <Navbar.Toggle\r\n            aria-controls=\"basic-navbar-nav\"\r\n            className=\"navbar-toggle\"\r\n          />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"#home\">Home</Nav.Link>\r\n              <Nav.Link href=\"#link\">Link</Nav.Link>\r\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <Button className=\"wallet-connect-button\">\r\n                {currentAccount === ''\r\n                  ? renderNotConnectedContainer()\r\n                  : renderMintUI()}\r\n              </Button>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavbarComponent\r\n","import React from 'react'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport {\n  AppContainer,\n  DivList,\n  DivListItem,\n  Paragraph,\n  ButtonList,\n  Button,\n  DivListLeft,\n  DivListRight,\n} from './AppElements'\n\nimport './App.css'\n\nimport LoginComponent from './components/login-component/login-component'\nimport CardListComponent from './components/card-list/card-list.component'\nimport Apps from './components/login-auth/ethers-type-login'\nimport NavbarComponent from './components/navbar/navbar-component'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavbarComponent />\n      <AppContainer>\n        {/* <LoginComponent /> */}\n        <CardListComponent />\n        {/* <Apps /> */}\n      </AppContainer>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\nimport App from './App'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(<App />)\n"],"sourceRoot":""}